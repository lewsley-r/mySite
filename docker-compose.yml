version: "2"
services:
  www:
    image: nginx:alpine
    volumes:
      - ./etc/nginx/conf.d/default.conf.nginx:/etc/nginx/conf.d/default.conf
      - ./ms-backend:/var/www/app
    ports:
      - "8000:80"
    depends_on:
      - ms-backend
      - ms-frontend


  ms-backend:
    build:
      context: dockerize/backend
    # this way container interacts with host on behalf of current user.
    # !!! NOTE: $UID is a _shell_ variable, not an environment variable!
    # To make it available as a shell var, make sure you have this in your ~/.bashrc (./.zshrc etc):
    # export UID="$UID"
    user: ${UID}:${UID}
    
    volumes:
      - ./ms-backend:/app
      # custom adjustments to php.ini
      # i. e. "xdebug.remote_host" to debug the dockerized app
      - ./etc/php:/usr/local/etc/php/local.conf.d/
    environment:
      # add our custom config files for the php to scan
      PHP_INI_SCAN_DIR: "/usr/local/etc/php/conf.d/:/usr/local/etc/php/local.conf.d/"
    command: "php artisan serve --host=0.0.0.0 --port=8080"


  ms-frontend:
    image: node:current-alpine
    user: ${UID}:${UID}
    working_dir: /home/node/app
    volumes:
    - ./ms-frontend:/home/node/app
    ports:
      - "8080:8080"
    environment:
      NODE_ENV: development
    command: "npm run serve"


  db:
      image: mysql
      volumes:
        - ./dbdata:/var/lib/mysql
      environment:
        - "MYSQL_DATABASE=ms_db"
        - "MYSQL_USER=ronan"
        - "MYSQL_PASSWORD=mySite"
        - "MYSQL_ROOT_PASSWORD=secretroot"
      ports:
          - "3306:3306"
  

